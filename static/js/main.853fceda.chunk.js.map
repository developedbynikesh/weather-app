{"version":3,"sources":["components/Main.js","App.js","index.js"],"names":["Main","useState","city","setCity","inputData","setInput","condition","setCondition","useEffect","fetchApi","a","url","fetch","response","json","toJson","main","className","id","type","placeholder","onChange","e","target","value","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","name","temp","temp_min","temp_max","App","ReactDOM","render","document","getElementById"],"mappings":"6MAkFeA,EA/EF,WACX,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,WAAvC,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAkCJ,mBAAS,IAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACAC,qBAAU,WACR,IAAMC,EAAQ,uCAAG,gCAAAC,EAAA,6DACTC,EADS,4DACkDP,EADlD,iEAEQQ,MAAMD,GAFd,cAETE,EAFS,gBAGMA,EAASC,OAHf,OAGTC,EAHS,OAIfZ,EAAQY,EAAOC,MACfT,EAAaQ,GALE,2CAAH,qDAOdN,MACC,CAACL,IAGJ,OACE,mCACE,qBAAKa,UAAU,4EAAf,SACE,sBAAKA,UAAU,kKAAf,UACE,qBAAKA,UAAU,QAAf,SACE,uBACEA,UAAU,uHACVC,GAAG,WACHC,KAAK,SACLC,YAAY,SACZC,SAZK,SAACC,GAAD,OAAOjB,EAASiB,EAAEC,OAAOC,QAa9BA,MAAOpB,MAGTF,EAGA,qCACE,sBAAKe,UAAU,mDAAf,UACE,qBAAKA,UAAU,wFAAf,SACE,sBACEQ,MAAM,6BACNR,UAAU,2BACVS,KAAK,OACLC,QAAQ,YACRC,OAAO,eALT,UAOE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,uFAEJ,sBACEH,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,0CAIR,oBAAIf,UAAU,8CAAd,SACGX,EAAU2B,UAGf,sBAAKhB,UAAU,2DAAf,UACE,qBAAKA,UAAU,sDAAf,SACE,qBAAIA,UAAU,qCAAd,UACGf,EAAKgC,KADR,aAIF,qBAAIjB,UAAU,0CAAd,mBACSf,EAAKiC,SADd,iBACmCjC,EAAKkC,SADxC,iBApCJ,sD,MCtBGC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCFNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.853fceda.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n// import WeatherData from \"../img/Weatherinformation.png\";\r\n\r\nconst Main = () => {\r\n  const [city, setCity] = useState(null);\r\n  const [inputData, setInput] = useState(\"Birgunj\");\r\n  const [condition, setCondition] = useState(\"\");\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${inputData}&units=metric&appid=22cd669bb16b3765f9ad8af1cc51ec6b`;\r\n      const response = await fetch(url);\r\n      const toJson = await response.json();\r\n      setCity(toJson.main);\r\n      setCondition(toJson);\r\n    };\r\n    fetchApi();\r\n  }, [inputData]);\r\n  const inputVal = (e) => setInput(e.target.value);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container mx-auto\t\tmt-10 flex justify-center font-mono\titems-center \t\">\r\n        <div className=\"container border-2 h-96\tw-80 ring-indigo-300 flex justify-start items-center\tbg-gradient-to-b from-blue-400 via-blue-600\tto-blue-900 rounded-2xl\tflex-col\t\">\r\n          <div className=\"mt-10\">\r\n            <input\r\n              className=\"shadow appearance-none border rounded  py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n              id=\"username\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              onChange={inputVal}\r\n              value={inputData}\r\n            />\r\n          </div>\r\n          {!city ? (\r\n            <p>No Data Found</p>\r\n          ) : (\r\n            <>\r\n              <div className=\"container flex justify-center items-center mt-16\">\r\n                <div className=\"animate__animated animate__wobble animate__delay-5s animate__infinite  animate__slow \">\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className=\"h-6 w-6 text-gray-200 \t\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\r\n                    />\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                <h1 className=\"text-3xl\ttext-center font-bold\ttext-white\">\r\n                  {condition.name}\r\n                </h1>\r\n              </div>\r\n              <div className=\"container mt-4 flex justify-center flex-col items-center\">\r\n                <div className=\"container flex justify-center flex-row items-center\">\r\n                  <h3 className=\"text-xl font-bold\ttext-white mr-2\">\r\n                    {city.temp}°c\r\n                  </h3>\r\n                </div>\r\n                <h4 className=\"text-xs font-bold\t mt-4 text-indigo-50\">\r\n                  Min : {city.temp_min}°c | Max : {city.temp_max}°c\r\n                </h4>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport \"animate.css\";\n\nfunction App() {\n  return (\n    <>\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}